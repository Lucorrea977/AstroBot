{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport chatService from '../../services/chatService';\nconst initialState = {\n  messages: [],\n  isLoading: false,\n  error: null\n};\nexport const getMessages = createAsyncThunk('chat/getMessages', async () => {\n  const messages = await chatService.getMessages();\n  return messages;\n});\nexport const sendMessage = createAsyncThunk('chat/sendMessage', async message => {\n  const response = await chatService.sendMessage(message);\n  return response;\n});\nconst chatSlice = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(getMessages.pending, state => {\n      state.isLoading = true;\n    }).addCase(getMessages.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.messages = action.payload;\n    }).addCase(getMessages.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message;\n    }).addCase(sendMessage.fulfilled, (state, action) => {\n      state.messages = [...state.messages, action.payload];\n    });\n  }\n});\nexport default chatSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","chatService","initialState","messages","isLoading","error","getMessages","sendMessage","message","response","chatSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/asus/OneDrive/Escritorio/luana/AstroBot/client/src/redux/reducer/chatSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport chatService from '../../services/chatService';\r\n\r\nconst initialState = {\r\n  messages: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nexport const getMessages = createAsyncThunk('chat/getMessages', async () => {\r\n  const messages = await chatService.getMessages();\r\n  return messages;\r\n});\r\n\r\nexport const sendMessage = createAsyncThunk('chat/sendMessage', async (message) => {\r\n  const response = await chatService.sendMessage(message);\r\n  return response;\r\n});\r\n\r\nconst chatSlice = createSlice({\r\n  name: 'chat',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(getMessages.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getMessages.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.messages = action.payload;\r\n      })\r\n      .addCase(getMessages.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(sendMessage.fulfilled, (state, action) => {\r\n        state.messages = [...state.messages, action.payload];\r\n      });\r\n  },\r\n});\r\n\r\nexport default chatSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,WAAW,MAAM,4BAA4B;AAEpD,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGN,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EAC1E,MAAMG,QAAQ,GAAG,MAAMF,WAAW,CAACK,WAAW,CAAC,CAAC;EAChD,OAAOH,QAAQ;AACjB,CAAC,CAAC;AAEF,OAAO,MAAMI,WAAW,GAAGP,gBAAgB,CAAC,kBAAkB,EAAE,MAAOQ,OAAO,IAAK;EACjF,MAAMC,QAAQ,GAAG,MAAMR,WAAW,CAACM,WAAW,CAACC,OAAO,CAAC;EACvD,OAAOC,QAAQ;AACjB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGX,WAAW,CAAC;EAC5BY,IAAI,EAAE,MAAM;EACZT,YAAY;EACZU,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAaA,CAACC,OAAO,EAAE;IACrBA,OAAO,CACJC,OAAO,CAACT,WAAW,CAACU,OAAO,EAAGC,KAAK,IAAK;MACvCA,KAAK,CAACb,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDW,OAAO,CAACT,WAAW,CAACY,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACb,SAAS,GAAG,KAAK;MACvBa,KAAK,CAACd,QAAQ,GAAGgB,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC,CACDL,OAAO,CAACT,WAAW,CAACe,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACb,SAAS,GAAG,KAAK;MACvBa,KAAK,CAACZ,KAAK,GAAGc,MAAM,CAACd,KAAK,CAACG,OAAO;IACpC,CAAC,CAAC,CACDO,OAAO,CAACR,WAAW,CAACW,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACd,QAAQ,GAAG,CAAC,GAAGc,KAAK,CAACd,QAAQ,EAAEgB,MAAM,CAACC,OAAO,CAAC;IACtD,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeV,SAAS,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}