{"ast":null,"code":"import axios from 'axios';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const login = (email, password) => async dispatch => {\n  try {\n    const res = await axios.post('/api/users/login', {\n      email,\n      password\n    });\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data.token\n    });\n    return Promise.resolve(); // Indica que la acción fue exitosa\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.error\n    });\n    return Promise.reject(error.response.data.error); // Indica que la acción falló\n  }\n};\nexport const register = (email, password) => async dispatch => {\n  try {\n    await axios.post('/api/users/register', {\n      email,\n      password\n    });\n    dispatch({\n      type: REGISTER_SUCCESS\n    });\n    return Promise.resolve(); // Indica que la acción fue exitosa\n  } catch (error) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: error.response.data.error\n    });\n    return Promise.reject(error.response.data.error); // Indica que la acción falló\n  }\n};","map":{"version":3,"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","login","email","password","dispatch","res","post","type","payload","data","token","Promise","resolve","error","response","reject","register"],"sources":["C:/Users/asus/OneDrive/Escritorio/luana/MagicalWords/client/src/redux/actions/authActions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.post('/api/users/login', { email, password });\r\n        dispatch({ type: LOGIN_SUCCESS, payload: res.data.token });\r\n        return Promise.resolve();  // Indica que la acción fue exitosa\r\n    } catch (error) {\r\n        dispatch({ type: LOGIN_FAIL, payload: error.response.data.error });\r\n        return Promise.reject(error.response.data.error);  // Indica que la acción falló\r\n    }\r\n};\r\n\r\nexport const register = (email, password) => async (dispatch) => {\r\n    try {\r\n        await axios.post('/api/users/register', { email, password });\r\n        dispatch({ type: REGISTER_SUCCESS });\r\n        return Promise.resolve();  // Indica que la acción fue exitosa\r\n    } catch (error) {\r\n        dispatch({ type: REGISTER_FAIL, payload: error.response.data.error });\r\n        return Promise.reject(error.response.data.error);  // Indica que la acción falló\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,aAAa,GAAG,eAAe;AAE5C,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,kBAAkB,EAAE;MAAEJ,KAAK;MAAEC;IAAS,CAAC,CAAC;IACrEC,QAAQ,CAAC;MAAEG,IAAI,EAAEV,aAAa;MAAEW,OAAO,EAAEH,GAAG,CAACI,IAAI,CAACC;IAAM,CAAC,CAAC;IAC1D,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC,CAAE;EAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZT,QAAQ,CAAC;MAAEG,IAAI,EAAET,UAAU;MAAEU,OAAO,EAAEK,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACI;IAAM,CAAC,CAAC;IAClE,OAAOF,OAAO,CAACI,MAAM,CAACF,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACI,KAAK,CAAC,CAAC,CAAE;EACvD;AACJ,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAGA,CAACd,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC7D,IAAI;IACA,MAAMR,KAAK,CAACU,IAAI,CAAC,qBAAqB,EAAE;MAAEJ,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC5DC,QAAQ,CAAC;MAAEG,IAAI,EAAER;IAAiB,CAAC,CAAC;IACpC,OAAOY,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC,CAAE;EAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZT,QAAQ,CAAC;MAAEG,IAAI,EAAEP,aAAa;MAAEQ,OAAO,EAAEK,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACI;IAAM,CAAC,CAAC;IACrE,OAAOF,OAAO,CAACI,MAAM,CAACF,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACI,KAAK,CAAC,CAAC,CAAE;EACvD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}