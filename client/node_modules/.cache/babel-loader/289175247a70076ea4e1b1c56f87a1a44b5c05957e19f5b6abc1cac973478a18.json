{"ast":null,"code":"import axios from '../config/axiosConfig'; // Asegúrate de ajustar la ruta según tu estructura de proyecto\n\nexport const AUTH_ACTIONS = {\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS',\n  FORGOT_PASSWORD_FAILURE: 'FORGOT_PASSWORD_FAILURE',\n  RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS',\n  RESET_PASSWORD_FAILURE: 'RESET_PASSWORD_FAILURE',\n  UPDATE_PROFILE_SUCCESS: 'UPDATE_PROFILE_SUCCESS',\n  UPDATE_PROFILE_FAILURE: 'UPDATE_PROFILE_FAILURE'\n};\nexport const registerUser = formData => async dispatch => {\n  try {\n    const response = await axios.post('/api/users/register', formData);\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_SUCCESS,\n      payload: response.data\n    });\n    return response.data;\n  } catch (error) {\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_FAILURE,\n      payload: error\n    });\n    throw error;\n  }\n};\nexport const loginUser = formData => async dispatch => {\n  try {\n    const response = await axios.post('/api/users/login', formData);\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_SUCCESS,\n      payload: response.data\n    });\n    return response.data;\n  } catch (error) {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_FAILURE,\n      payload: error\n    });\n    throw error;\n  }\n};\nexport const updateProfile = formData => async (dispatch, getState) => {\n  try {\n    const {\n      auth\n    } = getState();\n    const response = await axios.post('/api/users/updateUserProfile', formData, {\n      headers: {\n        'Authorization': `Bearer ${auth.token}`\n      }\n    });\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS,\n      payload: response.data\n    });\n    return response.data;\n  } catch (error) {\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_PROFILE_FAILURE,\n      payload: error\n    });\n    throw error;\n  }\n};\nexport const forgotPassword = formData => async dispatch => {\n  try {\n    const response = await axios.post('/api/password/forgot-password', formData);\n    dispatch({\n      type: AUTH_ACTIONS.FORGOT_PASSWORD_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ACTIONS.FORGOT_PASSWORD_FAILURE,\n      payload: error\n    });\n  }\n};\nexport const resetPassword = (formData, token) => async dispatch => {\n  try {\n    const response = await axios.post(`/api/password/reset-password/${token}`, formData);\n    dispatch({\n      type: AUTH_ACTIONS.RESET_PASSWORD_SUCCESS,\n      payload: response.data\n    });\n    return response;\n  } catch (error) {\n    dispatch({\n      type: AUTH_ACTIONS.RESET_PASSWORD_FAILURE,\n      payload: error\n    });\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","AUTH_ACTIONS","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_SUCCESS","LOGIN_FAILURE","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILURE","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILURE","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAILURE","registerUser","formData","dispatch","response","post","type","payload","data","error","loginUser","updateProfile","getState","auth","headers","token","forgotPassword","resetPassword"],"sources":["C:/Users/asus/OneDrive/Escritorio/luana/WeavingStories/client/src/redux/actions/authActions.js"],"sourcesContent":["import axios from '../config/axiosConfig'; // Asegúrate de ajustar la ruta según tu estructura de proyecto\r\n\r\nexport const AUTH_ACTIONS = {\r\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\r\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS',\r\n  FORGOT_PASSWORD_FAILURE: 'FORGOT_PASSWORD_FAILURE',\r\n  RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS',\r\n  RESET_PASSWORD_FAILURE: 'RESET_PASSWORD_FAILURE',\r\n  UPDATE_PROFILE_SUCCESS: 'UPDATE_PROFILE_SUCCESS',\r\n  UPDATE_PROFILE_FAILURE: 'UPDATE_PROFILE_FAILURE',\r\n};\r\n\r\nexport const registerUser = (formData) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post('/api/users/register', formData);\r\n    dispatch({ type: AUTH_ACTIONS.REGISTER_SUCCESS, payload: response.data });\r\n    return response.data;\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ACTIONS.REGISTER_FAILURE, payload: error });\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post('/api/users/login', formData);\r\n    dispatch({ type: AUTH_ACTIONS.LOGIN_SUCCESS, payload: response.data });\r\n    return response.data;\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ACTIONS.LOGIN_FAILURE, payload: error });\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateProfile = (formData) => async (dispatch, getState) => {\r\n  try {\r\n    const { auth } = getState();\r\n    const response = await axios.post('/api/users/updateUserProfile', formData, {\r\n      headers: {\r\n        'Authorization': `Bearer ${auth.token}`,\r\n      },\r\n    });\r\n    dispatch({ type: AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS, payload: response.data });\r\n    return response.data;\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ACTIONS.UPDATE_PROFILE_FAILURE, payload: error });\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const forgotPassword = (formData) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post('/api/password/forgot-password', formData);\r\n    dispatch({ type: AUTH_ACTIONS.FORGOT_PASSWORD_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ACTIONS.FORGOT_PASSWORD_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\nexport const resetPassword = (formData, token) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(`/api/password/reset-password/${token}`, formData);\r\n    dispatch({ type: AUTH_ACTIONS.RESET_PASSWORD_SUCCESS, payload: response.data });\r\n    return response;\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ACTIONS.RESET_PASSWORD_FAILURE, payload: error });\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}