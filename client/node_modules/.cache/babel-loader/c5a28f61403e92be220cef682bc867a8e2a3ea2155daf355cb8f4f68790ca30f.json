{"ast":null,"code":"import axios from 'axios';\nexport const PROFILE_ACTIONS = {\n  GET_PROFILE_SUCCESS: 'GET_PROFILE_SUCCESS',\n  GET_PROFILE_FAILURE: 'GET_PROFILE_FAILURE',\n  UPDATE_PROFILE_SUCCESS: 'UPDATE_PROFILE_SUCCESS',\n  UPDATE_PROFILE_FAILURE: 'UPDATE_PROFILE_FAILURE'\n};\nexport const getProfile = userId => async dispatch => {\n  try {\n    const response = await axios.get(`http://localhost:3001/api/users/${userId}`);\n    dispatch({\n      type: PROFILE_ACTIONS.GET_PROFILE_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ACTIONS.GET_PROFILE_FAILURE,\n      payload: error\n    });\n    console.error('Error al obtener el perfil del usuario:', error);\n  }\n};\nexport const updateProfile = userData => async dispatch => {\n  try {\n    const response = await axios.put(`http://localhost:3001/api/users/profile`, userData);\n    dispatch({\n      type: PROFILE_ACTIONS.UPDATE_PROFILE_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ACTIONS.UPDATE_PROFILE_FAILURE,\n      payload: error\n    });\n    console.error('Error al actualizar el perfil del usuario:', error);\n  }\n};","map":{"version":3,"names":["axios","PROFILE_ACTIONS","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAILURE","getProfile","userId","dispatch","response","get","type","payload","data","error","console","updateProfile","userData","put"],"sources":["C:/Users/asus/OneDrive/Escritorio/luana/WeavingStories/client/src/redux/actions/profileActions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const PROFILE_ACTIONS = {\r\n  GET_PROFILE_SUCCESS: 'GET_PROFILE_SUCCESS',\r\n  GET_PROFILE_FAILURE: 'GET_PROFILE_FAILURE',\r\n  UPDATE_PROFILE_SUCCESS: 'UPDATE_PROFILE_SUCCESS',\r\n  UPDATE_PROFILE_FAILURE: 'UPDATE_PROFILE_FAILURE',\r\n};\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get(`http://localhost:3001/api/users/${userId}`);\r\n    dispatch({ type: PROFILE_ACTIONS.GET_PROFILE_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: PROFILE_ACTIONS.GET_PROFILE_FAILURE, payload: error });\r\n    console.error('Error al obtener el perfil del usuario:', error);\r\n  }\r\n};\r\n\r\nexport const updateProfile = (userData) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.put(`http://localhost:3001/api/users/profile`, userData);\r\n    dispatch({ type: PROFILE_ACTIONS.UPDATE_PROFILE_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: PROFILE_ACTIONS.UPDATE_PROFILE_FAILURE, payload: error });\r\n    console.error('Error al actualizar el perfil del usuario:', error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAG;EAC7BC,mBAAmB,EAAE,qBAAqB;EAC1CC,mBAAmB,EAAE,qBAAqB;EAC1CC,sBAAsB,EAAE,wBAAwB;EAChDC,sBAAsB,EAAE;AAC1B,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,MAAM,IAAK,MAAOC,QAAQ,IAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,mCAAkCH,MAAO,EAAC,CAAC;IAC7EC,QAAQ,CAAC;MAAEG,IAAI,EAAEV,eAAe,CAACC,mBAAmB;MAAEU,OAAO,EAAEH,QAAQ,CAACI;IAAK,CAAC,CAAC;EACjF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEG,IAAI,EAAEV,eAAe,CAACE,mBAAmB;MAAES,OAAO,EAAEE;IAAM,CAAC,CAAC;IACvEC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;EACjE;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAIC,QAAQ,IAAK,MAAOT,QAAQ,IAAK;EAC7D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACkB,GAAG,CAAE,yCAAwC,EAAED,QAAQ,CAAC;IACrFT,QAAQ,CAAC;MAAEG,IAAI,EAAEV,eAAe,CAACG,sBAAsB;MAAEQ,OAAO,EAAEH,QAAQ,CAACI;IAAK,CAAC,CAAC;EACpF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEG,IAAI,EAAEV,eAAe,CAACI,sBAAsB;MAAEO,OAAO,EAAEE;IAAM,CAAC,CAAC;IAC1EC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;EACpE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}