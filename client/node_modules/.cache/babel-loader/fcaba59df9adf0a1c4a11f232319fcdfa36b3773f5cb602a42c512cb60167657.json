{"ast":null,"code":"// authActions.js\nimport axios from '../../config/axiosConfig';\nexport const AUTH_ACTIONS = {\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS',\n  FORGOT_PASSWORD_FAILURE: 'FORGOT_PASSWORD_FAILURE',\n  RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS',\n  RESET_PASSWORD_FAILURE: 'RESET_PASSWORD_FAILURE',\n  UPDATE_PROFILE_SUCCESS: 'UPDATE_PROFILE_SUCCESS',\n  UPDATE_PROFILE_FAILURE: 'UPDATE_PROFILE_FAILURE',\n  LOGOUT: 'LOGOUT'\n};\nexport const registerUser = formData => async dispatch => {\n  console.log(\"registerUser - FormData:\", formData);\n  try {\n    const response = await axios.post('/api/users/register', formData);\n    console.log(\"registerUser - Response:\", response.data);\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_SUCCESS,\n      payload: response.data\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"registerUser - Error:\", error);\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_FAILURE,\n      payload: error\n    });\n    throw error;\n  }\n};\nexport const loginUser = formData => async dispatch => {\n  console.log(\"loginUser - FormData:\", formData);\n  try {\n    const response = await axios.post('/api/users/login', formData);\n    const {\n      user,\n      token\n    } = response.data;\n    console.log(\"loginUser - Response:\", response.data);\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_SUCCESS,\n      payload: {\n        user,\n        token\n      }\n    });\n    localStorage.setItem('token', token);\n    return response.data;\n  } catch (error) {\n    console.error(\"loginUser - Error:\", error);\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_FAILURE,\n      payload: error\n    });\n    throw error;\n  }\n};\nexport const updateProfile = formData => async (dispatch, getState) => {\n  console.log(\"updateProfile - FormData:\", formData);\n  try {\n    const {\n      auth\n    } = getState();\n    console.log(\"updateProfile - Auth State:\", auth);\n    const response = await axios.post('/api/users/updateUserProfile', formData, {\n      headers: {\n        'Authorization': `Bearer ${auth.token}`\n      }\n    });\n    console.log(\"updateProfile - Response:\", response.data);\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS,\n      payload: response.data\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"updateProfile - Error:\", error.response.data);\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_PROFILE_FAILURE,\n      payload: error.response.data\n    });\n    throw error;\n  }\n};\nexport const logout = () => dispatch => {\n  console.log(\"logout\");\n  localStorage.removeItem('token');\n  dispatch({\n    type: AUTH_ACTIONS.LOGOUT\n  });\n};\nexport const forgotPassword = formData => async dispatch => {\n  console.log(\"forgotPassword - FormData:\", formData);\n  try {\n    const response = await axios.post('/api/password/forgot-password', formData);\n    console.log(\"forgotPassword - Response:\", response.data);\n    dispatch({\n      type: AUTH_ACTIONS.FORGOT_PASSWORD_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.error(\"forgotPassword - Error:\", error);\n    dispatch({\n      type: AUTH_ACTIONS.FORGOT_PASSWORD_FAILURE,\n      payload: error\n    });\n  }\n};\nexport const resetPassword = (formData, token) => async dispatch => {\n  console.log(\"resetPassword - FormData:\", formData, \"Token:\", token);\n  try {\n    const response = await axios.post(`/api/password/reset-password/${token}`, formData);\n    console.log(\"resetPassword - Response:\", response.data);\n    dispatch({\n      type: AUTH_ACTIONS.RESET_PASSWORD_SUCCESS,\n      payload: response.data\n    });\n    return response;\n  } catch (error) {\n    console.error(\"resetPassword - Error:\", error);\n    dispatch({\n      type: AUTH_ACTIONS.RESET_PASSWORD_FAILURE,\n      payload: error\n    });\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","AUTH_ACTIONS","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_SUCCESS","LOGIN_FAILURE","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILURE","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILURE","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAILURE","LOGOUT","registerUser","formData","dispatch","console","log","response","post","data","type","payload","error","loginUser","user","token","localStorage","setItem","updateProfile","getState","auth","headers","logout","removeItem","forgotPassword","resetPassword"],"sources":["C:/Users/asus/OneDrive/Escritorio/luana/WeavingStories/client/src/redux/actions/authActions.js"],"sourcesContent":["// authActions.js\r\nimport axios from '../../config/axiosConfig';\r\n\r\nexport const AUTH_ACTIONS = {\r\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\r\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS',\r\n  FORGOT_PASSWORD_FAILURE: 'FORGOT_PASSWORD_FAILURE',\r\n  RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS',\r\n  RESET_PASSWORD_FAILURE: 'RESET_PASSWORD_FAILURE',\r\n  UPDATE_PROFILE_SUCCESS: 'UPDATE_PROFILE_SUCCESS',\r\n  UPDATE_PROFILE_FAILURE: 'UPDATE_PROFILE_FAILURE',\r\n  LOGOUT: 'LOGOUT'\r\n};\r\n\r\nexport const registerUser = (formData) => async (dispatch) => {\r\n  console.log(\"registerUser - FormData:\", formData);\r\n  try {\r\n    const response = await axios.post('/api/users/register', formData);\r\n    console.log(\"registerUser - Response:\", response.data);\r\n    dispatch({ type: AUTH_ACTIONS.REGISTER_SUCCESS, payload: response.data });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"registerUser - Error:\", error);\r\n    dispatch({ type: AUTH_ACTIONS.REGISTER_FAILURE, payload: error });\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n  console.log(\"loginUser - FormData:\", formData);\r\n  try {\r\n    const response = await axios.post('/api/users/login', formData);\r\n    const { user, token } = response.data;\r\n    console.log(\"loginUser - Response:\", response.data);\r\n    dispatch({ type: AUTH_ACTIONS.LOGIN_SUCCESS, payload: { user, token } });\r\n    localStorage.setItem('token', token);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"loginUser - Error:\", error);\r\n    dispatch({ type: AUTH_ACTIONS.LOGIN_FAILURE, payload: error });\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateProfile = (formData) => async (dispatch, getState) => {\r\n  console.log(\"updateProfile - FormData:\", formData);\r\n  try {\r\n    const { auth } = getState();\r\n    console.log(\"updateProfile - Auth State:\", auth);\r\n    const response = await axios.post('/api/users/updateUserProfile', formData, {\r\n      headers: {\r\n        'Authorization': `Bearer ${auth.token}`,\r\n      },\r\n    });\r\n    console.log(\"updateProfile - Response:\", response.data);\r\n    dispatch({ type: AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS, payload: response.data });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"updateProfile - Error:\", error.response.data);\r\n    dispatch({ type: AUTH_ACTIONS.UPDATE_PROFILE_FAILURE, payload: error.response.data });\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  console.log(\"logout\");\r\n  localStorage.removeItem('token');\r\n  dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n};\r\n\r\nexport const forgotPassword = (formData) => async (dispatch) => {\r\n  console.log(\"forgotPassword - FormData:\", formData);\r\n  try {\r\n    const response = await axios.post('/api/password/forgot-password', formData);\r\n    console.log(\"forgotPassword - Response:\", response.data);\r\n    dispatch({ type: AUTH_ACTIONS.FORGOT_PASSWORD_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    console.error(\"forgotPassword - Error:\", error);\r\n    dispatch({ type: AUTH_ACTIONS.FORGOT_PASSWORD_FAILURE, payload: error });\r\n  }\r\n};\r\n\r\nexport const resetPassword = (formData, token) => async (dispatch) => {\r\n  console.log(\"resetPassword - FormData:\", formData, \"Token:\", token);\r\n  try {\r\n    const response = await axios.post(`/api/password/reset-password/${token}`, formData);\r\n    console.log(\"resetPassword - Response:\", response.data);\r\n    dispatch({ type: AUTH_ACTIONS.RESET_PASSWORD_SUCCESS, payload: response.data });\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"resetPassword - Error:\", error);\r\n    dispatch({ type: AUTH_ACTIONS.RESET_PASSWORD_FAILURE, payload: error });\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}