{"ast":null,"code":"import axios from 'axios';\nexport const AUTH_ACTIONS = {\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS',\n  FORGOT_PASSWORD_FAILURE: 'FORGOT_PASSWORD_FAILURE',\n  RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS',\n  RESET_PASSWORD_FAILURE: 'RESET_PASSWORD_FAILURE'\n};\nexport const registerUser = formData => async dispatch => {\n  try {\n    const response = await axios.post('/api/users/register', formData); // Asegúrate de que la ruta coincide\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_SUCCESS,\n      payload: response.data\n    });\n    console.log(response.data);\n  } catch (error) {\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_FAILURE,\n      payload: error\n    });\n    console.error('Error al registrar usuario:', error);\n  }\n};\nexport const loginUser = formData => async dispatch => {\n  try {\n    const response = await axios.post('/api/users/login', formData); // Asegúrate de que la ruta coincide\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_SUCCESS,\n      payload: response.data\n    });\n    console.log(response.data);\n  } catch (error) {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_FAILURE,\n      payload: error\n    });\n    console.error('Error al iniciar sesión:', error);\n  }\n};\nexport const forgotPassword = formData => async dispatch => {\n  try {\n    const response = await axios.post('/api/password/forgot-password', formData); // Asegúrate de que la ruta coincide\n    dispatch({\n      type: AUTH_ACTIONS.FORGOT_PASSWORD_SUCCESS,\n      payload: response.data\n    });\n    console.log(response.data);\n  } catch (error) {\n    dispatch({\n      type: AUTH_ACTIONS.FORGOT_PASSWORD_FAILURE,\n      payload: error\n    });\n    console.error('Error al solicitar restablecimiento de contraseña:', error);\n  }\n};\nexport const resetPassword = (formData, token) => async dispatch => {\n  try {\n    const response = await axios.post(`/api/password/reset-password/${token}`, formData); // Asegúrate de que la ruta coincide\n    dispatch({\n      type: AUTH_ACTIONS.RESET_PASSWORD_SUCCESS,\n      payload: response.data\n    });\n    console.log(response.data);\n  } catch (error) {\n    dispatch({\n      type: AUTH_ACTIONS.RESET_PASSWORD_FAILURE,\n      payload: error\n    });\n    console.error('Error al restablecer la contraseña:', error);\n  }\n};","map":{"version":3,"names":["axios","AUTH_ACTIONS","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_SUCCESS","LOGIN_FAILURE","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILURE","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILURE","registerUser","formData","dispatch","response","post","type","payload","data","console","log","error","loginUser","forgotPassword","resetPassword","token"],"sources":["C:/Users/asus/OneDrive/Escritorio/luana/WeavingStories/client/src/redux/actions/authActions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const AUTH_ACTIONS = {\r\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\r\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS',\r\n  FORGOT_PASSWORD_FAILURE: 'FORGOT_PASSWORD_FAILURE',\r\n  RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS',\r\n  RESET_PASSWORD_FAILURE: 'RESET_PASSWORD_FAILURE',\r\n};\r\n\r\nexport const registerUser = (formData) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post('/api/users/register', formData); // Asegúrate de que la ruta coincide\r\n    dispatch({ type: AUTH_ACTIONS.REGISTER_SUCCESS, payload: response.data });\r\n    console.log(response.data);\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ACTIONS.REGISTER_FAILURE, payload: error });\r\n    console.error('Error al registrar usuario:', error);\r\n  }\r\n};\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post('/api/users/login', formData); // Asegúrate de que la ruta coincide\r\n    dispatch({ type: AUTH_ACTIONS.LOGIN_SUCCESS, payload: response.data });\r\n    console.log(response.data);\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ACTIONS.LOGIN_FAILURE, payload: error });\r\n    console.error('Error al iniciar sesión:', error);\r\n  }\r\n};\r\n\r\nexport const forgotPassword = (formData) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post('/api/password/forgot-password', formData); // Asegúrate de que la ruta coincide\r\n    dispatch({ type: AUTH_ACTIONS.FORGOT_PASSWORD_SUCCESS, payload: response.data });\r\n    console.log(response.data);\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ACTIONS.FORGOT_PASSWORD_FAILURE, payload: error });\r\n    console.error('Error al solicitar restablecimiento de contraseña:', error);\r\n  }\r\n};\r\n\r\nexport const resetPassword = (formData, token) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(`/api/password/reset-password/${token}`, formData); // Asegúrate de que la ruta coincide\r\n    dispatch({ type: AUTH_ACTIONS.RESET_PASSWORD_SUCCESS, payload: response.data });\r\n    console.log(response.data);\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ACTIONS.RESET_PASSWORD_FAILURE, payload: error });\r\n    console.error('Error al restablecer la contraseña:', error);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}