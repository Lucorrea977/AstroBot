{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Escritorio\\\\luana\\\\WeavingStories\\\\client\\\\src\\\\views\\\\Password\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { resetPassword } from '../../redux/actions/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPasswordPage() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    token\n  } = useParams();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [passwordError, setPasswordError] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setMessage('Las contraseñas no coinciden.');\n      return;\n    }\n    if (!validatePassword(newPassword)) {\n      setPasswordError('La contraseña debe tener al menos 6 caracteres, una letra mayúscula y un número.');\n      return;\n    }\n    dispatch(resetPassword({\n      newPassword\n    }, token)).then(response => {\n      setMessage(response.data.message);\n      setTimeout(() => {\n        navigate('/');\n      }, 3000); // Redirigir después de 3 segundos\n    }).catch(error => {\n      setMessage('Error al restablecer la contraseña.');\n    });\n  };\n  const validatePassword = password => {\n    const regex = /^(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{6,}$/;\n    return regex.test(password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Restablecer Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"max-w-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: showPassword ? \"text\" : \"password\",\n        placeholder: \"Nueva Contrase\\xF1a\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        className: `w-full border border-gray-300 rounded-md py-2 px-3 mb-4 ${passwordError && 'border-red-500'}`,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xs italic\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: showPassword ? \"text\" : \"password\",\n        placeholder: \"Confirmar Nueva Contrase\\xF1a\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        className: `w-full border border-gray-300 rounded-md py-2 px-3 mb-4 ${passwordError && 'border-red-500'}`,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: showPassword,\n          onChange: () => setShowPassword(!showPassword),\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), \"Mostrar contrase\\xF1as\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600\",\n        children: \"Restablecer Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-red-500\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPasswordPage, \"SYIboZVHLQIySx0sULJWZmaRY54=\", false, function () {\n  return [useDispatch, useNavigate, useParams];\n});\n_c = ResetPasswordPage;\nexport default ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","useDispatch","resetPassword","jsxDEV","_jsxDEV","ResetPasswordPage","_s","dispatch","navigate","token","newPassword","setNewPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","passwordError","setPasswordError","message","setMessage","handleSubmit","e","preventDefault","validatePassword","then","response","data","setTimeout","catch","error","password","regex","test","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","checked","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Escritorio/luana/WeavingStories/client/src/views/Password/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { resetPassword } from '../../redux/actions/authActions';\r\n\r\nfunction ResetPasswordPage() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { token } = useParams();\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (newPassword !== confirmPassword) {\r\n      setMessage('Las contraseñas no coinciden.');\r\n      return;\r\n    }\r\n    if (!validatePassword(newPassword)) {\r\n      setPasswordError('La contraseña debe tener al menos 6 caracteres, una letra mayúscula y un número.');\r\n      return;\r\n    }\r\n    dispatch(resetPassword({ newPassword }, token)).then((response) => {\r\n      setMessage(response.data.message);\r\n      setTimeout(() => {\r\n        navigate('/');\r\n      }, 3000); // Redirigir después de 3 segundos\r\n    }).catch((error) => {\r\n      setMessage('Error al restablecer la contraseña.');\r\n    });\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    const regex = /^(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{6,}$/;\r\n    return regex.test(password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Restablecer Contraseña</h2>\r\n      <form onSubmit={handleSubmit} className=\"max-w-sm\">\r\n        <input\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          placeholder=\"Nueva Contraseña\"\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n          className={`w-full border border-gray-300 rounded-md py-2 px-3 mb-4 ${passwordError && 'border-red-500'}`}\r\n          required\r\n        />\r\n        {passwordError && <p className=\"text-red-500 text-xs italic\">{passwordError}</p>} {/* Mensaje de error */}\r\n        <input\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          placeholder=\"Confirmar Nueva Contraseña\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          className={`w-full border border-gray-300 rounded-md py-2 px-3 mb-4 ${passwordError && 'border-red-500'}`}\r\n          required\r\n        />\r\n        <div className=\"mb-4\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={showPassword}\r\n            onChange={() => setShowPassword(!showPassword)}\r\n            className=\"mr-2\"\r\n          />\r\n          Mostrar contraseñas\r\n        </div>\r\n        <button type=\"submit\" className=\"bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600\">Restablecer Contraseña</button>\r\n      </form>\r\n      {message && <p className=\"mt-4 text-red-500\">{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPasswordPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}